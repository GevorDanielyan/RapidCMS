@if (Field != null)
{
    <td @onclick="HandleClick">
        @Field.Name
        <small>@Field.Description</small>

        @if (Field.IsSortable())
        {
            @if (Field.SortDescending == OrderByType.None)
            {
                <Icon Name="Sort" />
            }
            else if (Field.SortDescending == OrderByType.Ascending)
            {
                <Icon Name="SortUp" />
            }
            else if (Field.SortDescending == OrderByType.Descending)
            {
                <Icon Name="SortDown" />
            }
        }
    </td>
}
else if (GroupedFields != null && FieldToShow != null)
{
    <td>
        @GroupedFields[FieldToShow].Name
        <small>@GroupedFields[FieldToShow].Description</small>
    </td>
}

@code {
    [Parameter] public FieldUI? Field { get; set; }
    [Parameter] public Dictionary<Type, FieldUI>? GroupedFields { get; set; }
    [Parameter] public Type? FieldToShow { get; set; }
    [Parameter] public EventCallback<int> OnPageChanged { get; set; }

    private async Task HandleClick(MouseEventArgs args)
    {
        if (Field?.IsSortable() ?? false)
        {
            Field!.SortDescending =
                Field.SortDescending == OrderByType.Ascending
                ? OrderByType.Descending
                : Field.SortDescending == OrderByType.Descending
                ? OrderByType.None
                : OrderByType.Ascending;

            await OnPageChanged.InvokeAsync(1);
        }
    }
}
